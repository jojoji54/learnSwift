import 'package:learnswift/data/courses/coursesExModel.dart';
import 'package:learnswift/data/courses/Swift/swiftBasics/sbExModelListEN.dart';

List<CoursesExModel> swiftArraysModelZH = [
  CoursesExModel(
    id: 76,
    exerciseName: '访问数组元素',
    productID: 'com.mrrubik.learnswift.swiftbasicex76',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(76),
    completed: purchaseManagerHive.getCompleted(76),
  ),
  CoursesExModel(
    id: 77,
    exerciseName: '添加并打印元素',
    productID: 'com.mrrubik.learnswift.swiftbasicex77',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(77),
    completed: purchaseManagerHive.getCompleted(77),
  ),
  CoursesExModel(
    id: 78,
    exerciseName: '替换一个元素',
    productID: 'com.mrrubik.learnswift.swiftbasicex78',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(78),
    completed: purchaseManagerHive.getCompleted(78),
  ),
  CoursesExModel(
    id: 79,
    exerciseName: '添加和移除元素',
    productID: 'com.mrrubik.learnswift.swiftbasicex79',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(79),
    completed: purchaseManagerHive.getCompleted(79),
  ),
  CoursesExModel(
    id: 80,
    exerciseName: '数组操作挑战',
    productID: 'com.mrrubik.learnswift.swiftbasicex80',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(80),
    completed: purchaseManagerHive.getCompleted(80),
  ),
  CoursesExModel(
    id: 81,
    exerciseName: '数组操作挑战',
    productID: 'com.mrrubik.learnswift.swiftbasicex81',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(81),
    completed: purchaseManagerHive.getCompleted(81),
  ),
  CoursesExModel(
    id: 82,
    exerciseName: '数组求和挑战',
    productID: 'com.mrrubik.learnswift.swiftbasicex82',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(82),
    completed: purchaseManagerHive.getCompleted(82),
  ),
  CoursesExModel(
    id: 84,
    exerciseName: '统计数组中元素出现次数',
    productID: 'com.mrrubik.learnswift.swiftbasicex84',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(84),
    completed: purchaseManagerHive.getCompleted(84),
  ),
  CoursesExModel(
    id: 85,
    exerciseName: '反转数组',
    productID: 'com.mrrubik.learnswift.swiftbasicex85',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(85),
    completed: purchaseManagerHive.getCompleted(85),
  ),
  CoursesExModel(
    id: 86,
    exerciseName: '找到数组中的最大值',
    productID: 'com.mrrubik.learnswift.swiftbasicex86',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(86),
    completed: purchaseManagerHive.getCompleted(86),
  ),
  CoursesExModel(
    id: 87,
    exerciseName: '筛选偶数',
    productID: 'com.mrrubik.learnswift.swiftbasicex87',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(87),
    completed: purchaseManagerHive.getCompleted(87),
  ),
  CoursesExModel(
    id: 88,
    exerciseName: '数组元素移除挑战',
    productID: 'com.mrrubik.learnswift.swiftbasicex88',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(88),
    completed: purchaseManagerHive.getCompleted(88),
  ),
  CoursesExModel(
    id: 89,
    exerciseName: '找到数组中最大的数字',
    productID: 'com.mrrubik.learnswift.swiftbasicex89',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(89),
    completed: purchaseManagerHive.getCompleted(89),
  ),
  CoursesExModel(
    id: 90,
    exerciseName: '合并两个数组',
    productID: 'com.mrrubik.learnswift.swiftbasicex90',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(90),
    completed: purchaseManagerHive.getCompleted(90),
  ),
  CoursesExModel(
    id: 91,
    exerciseName: '合并并排序数组',
    productID: 'com.mrrubik.learnswift.swiftbasicex91',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(91),
    completed: purchaseManagerHive.getCompleted(91),
  ),
];
