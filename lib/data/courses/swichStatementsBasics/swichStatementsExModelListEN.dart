
import 'package:learnswift/data/courses/coursesExModel.dart';
import 'package:learnswift/data/courses/swiftBasics/sbExModelListZH.dart';

List<CoursesExModel> switchModelEN = [
  CoursesExModel(
    id: 46,
    exerciseName: 'Switch Basics',
    productID: 'com.mrrubik.learnswift.swiftbasicex46',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(46),
    completed: purchaseManagerHive.getCompleted(46),
  ),
  CoursesExModel(
    id: 47,
    exerciseName: 'Switch with Ranges',
    productID: 'com.mrrubik.learnswift.swiftbasicex47',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(47),
    completed: purchaseManagerHive.getCompleted(47),
  ),
  CoursesExModel(
    id: 48,
    exerciseName: 'Switch with Multiple Conditions',
    productID: 'com.mrrubik.learnswift.swiftbasicex48',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(48),
    completed: purchaseManagerHive.getCompleted(48),
  ),
  CoursesExModel(
    id: 49,
    exerciseName: 'Switch with Numerical Ranges',
    productID: 'com.mrrubik.learnswift.swiftbasicex49',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(49),
    completed: purchaseManagerHive.getCompleted(49),
  ),
  CoursesExModel(
    id: 50,
    exerciseName: 'Switch with Multiple Matches',
    productID: 'com.mrrubik.learnswift.swiftbasicex50',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(50),
    completed: purchaseManagerHive.getCompleted(50),
  ),
  CoursesExModel(
    id: 51,
    exerciseName: 'Advanced Switch with Ranges',
    productID: 'com.mrrubik.learnswift.swiftbasicex51',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(51),
    completed: purchaseManagerHive.getCompleted(51),
  ),
  CoursesExModel(
    id: 52,
    exerciseName: 'Switch with Multiple Values Per Case',
    productID: 'com.mrrubik.learnswift.swiftbasicex52',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(52),
    completed: purchaseManagerHive.getCompleted(52),
  ),
  CoursesExModel(
    id: 53,
    exerciseName: 'Switch with Ranges and Default Case',
    productID: 'com.mrrubik.learnswift.swiftbasicex53',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(53),
    completed: purchaseManagerHive.getCompleted(53),
  ),
  CoursesExModel(
    id: 54,
    exerciseName: 'Nested Switch Cases',
    productID: 'com.mrrubik.learnswift.swiftbasicex54',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(54),
    completed: purchaseManagerHive.getCompleted(54),
  ),
  CoursesExModel(
    id: 55,
    exerciseName: 'Nested Switch Cases',
    productID: 'com.mrrubik.learnswift.swiftbasicex55',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(55),
    completed: purchaseManagerHive.getCompleted(55),
  ),
  CoursesExModel(
    id: 56,
    exerciseName: 'Challenge 1: Day of the Week Scheduler',
    productID: 'com.mrrubik.learnswift.swiftbasicex56',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(56),
    completed: purchaseManagerHive.getCompleted(56),
  ),
  CoursesExModel(
    id: 57,
    exerciseName: 'Challenge 2: Grade Feedback System',
    productID: 'com.mrrubik.learnswift.swiftbasicex57',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(57),
    completed: purchaseManagerHive.getCompleted(57),
  ),
  CoursesExModel(
    id: 58,
    exerciseName: 'Challenge 3: Month Days Calculator',
    productID: 'com.mrrubik.learnswift.swiftbasicex58',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(58),
    completed: purchaseManagerHive.getCompleted(58),
  ),
  CoursesExModel(
    id: 59,
    exerciseName: 'Challenge 4: Grade Evaluator',
    productID: 'com.mrrubik.learnswift.swiftbasicex59',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(59),
    completed: purchaseManagerHive.getCompleted(59),
  ),
  CoursesExModel(
    id: 60,
    exerciseName: 'Challenge 5: Day Planner',
    productID: 'com.mrrubik.learnswift.swiftbasicex60',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(60),
    completed: purchaseManagerHive.getCompleted(60),
  ),
];
