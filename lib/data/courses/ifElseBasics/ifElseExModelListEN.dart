
import 'package:learnswift/data/courses/coursesExModel.dart';
import 'package:learnswift/data/courses/swiftBasics/sbExModelListZH.dart';

List<CoursesExModel> ifElseModelEN = [
  CoursesExModel(
    id: 31,
    exerciseName: 'If-Else Basics',
    productID: 'com.mrrubik.learnswift.swiftbasicex31',
    alreadyBuy: purchaseManagerHive.getPurchasedTrue(31),
    completed: purchaseManagerHive.getCompleted(31),
  ),
  CoursesExModel(
    id: 32,
    exerciseName: 'If-Else Multiple Conditions',
    productID: 'com.mrrubik.learnswift.swiftbasicex32',
   alreadyBuy: purchaseManagerHive.getPurchasedTrue(32),
    completed: purchaseManagerHive.getCompleted(32),
  ),
  CoursesExModel(
    id: 33,
    exerciseName: 'If-Else Equality Check',
    productID: 'com.mrrubik.learnswift.swiftbasicex33',
 alreadyBuy: purchaseManagerHive.getPurchasedTrue(33),
    completed: purchaseManagerHive.getCompleted(33),
  ),
  CoursesExModel(
    id: 34,
    exerciseName: 'If-Else With Comparison Operators',
    productID: 'com.mrrubik.learnswift.swiftbasicex34',
  alreadyBuy: purchaseManagerHive.getPurchasedTrue(34),
    completed: purchaseManagerHive.getCompleted(34),
  ),
  CoursesExModel(
    id: 35,
    exerciseName: 'Nested If-Else Basics',
    productID: 'com.mrrubik.learnswift.swiftbasicex35',
   alreadyBuy: purchaseManagerHive.getPurchasedTrue(35),
    completed: purchaseManagerHive.getCompleted(35),
  ),
  CoursesExModel(
    id: 36,
    exerciseName: 'If-Else with String Conditions',
    productID: 'com.mrrubik.learnswift.swiftbasicex36',
 alreadyBuy: purchaseManagerHive.getPurchasedTrue(36),
    completed: purchaseManagerHive.getCompleted(36),
  ),
  CoursesExModel(
    id: 37,
    exerciseName: 'If-Else Numerical Comparison',
    productID: 'com.mrrubik.learnswift.swiftbasicex37',
  alreadyBuy: purchaseManagerHive.getPurchasedTrue(37),
    completed: purchaseManagerHive.getCompleted(37),
  ),
  CoursesExModel(
    id: 38,
    exerciseName: 'Handling Multiple Conditions v2',
    productID: 'com.mrrubik.learnswift.swiftbasicex38',
   alreadyBuy: purchaseManagerHive.getPurchasedTrue(38),
    completed: purchaseManagerHive.getCompleted(38),
  ),
  CoursesExModel(
    id: 39,
    exerciseName: 'Employee Bonus Calculation',
    productID: 'com.mrrubik.learnswift.swiftbasicex39',
   alreadyBuy: purchaseManagerHive.getPurchasedFalse(39),
    completed: purchaseManagerHive.getCompleted(39),
  ),
  CoursesExModel(
    id: 40,
    exerciseName: 'Multi-Condition Grading System',
    productID: 'com.mrrubik.learnswift.swiftbasicex40',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(40),
    completed: purchaseManagerHive.getCompleted(40),
  ),
  CoursesExModel(
    id: 41,
    exerciseName: 'Complex Admission Criteria Challenge',
    productID: 'com.mrrubik.learnswift.swiftbasicex41',
     alreadyBuy: purchaseManagerHive.getPurchasedFalse(41),
    completed: purchaseManagerHive.getCompleted(41),
  ),
  CoursesExModel(
    id: 42,
    exerciseName: 'Admission Criteria Challenge',
    productID: 'com.mrrubik.learnswift.swiftbasicex42',
     alreadyBuy: purchaseManagerHive.getPurchasedFalse(42),
    completed: purchaseManagerHive.getCompleted(42),
  ),
  CoursesExModel(
    id: 43,
    exerciseName: 'Grade Evaluation System',
    productID: 'com.mrrubik.learnswift.swiftbasicex43',
     alreadyBuy: purchaseManagerHive.getPurchasedFalse(43),
    completed: purchaseManagerHive.getCompleted(43),
  ),
  CoursesExModel(
    id: 44,
    exerciseName: 'Password Strength Checker',
    productID: 'com.mrrubik.learnswift.swiftbasicex44',
     alreadyBuy: purchaseManagerHive.getPurchasedFalse(44),
    completed: purchaseManagerHive.getCompleted(44),
  ),
  CoursesExModel(
    id: 45,
    exerciseName: 'Grade Evaluator',
    productID: 'com.mrrubik.learnswift.swiftbasicex45',
    alreadyBuy: purchaseManagerHive.getPurchasedFalse(45),
    completed: purchaseManagerHive.getCompleted(45),
  ),
];
